# For more information about tox, see https://tox.readthedocs.io/en/latest/
[tox]
minversion = 4.0.16
envlist =
    lint
    pkg
    py
    py-devel
isolated_build = True
requires =
    pip >= 21.3.1

[testenv]
description =
    Unit testing
extras =
    test
deps =
    --editable .
    ansible-core
    py{39,310,311,312}: molecule[test]
    py{39,310,311,312}-{devel}: git+https://github.com/ansible-community/molecule.git@main#egg=molecule[test]
commands =
    pytest --collect-only
    # -s is added in order to allow live output on long running functional tests
    pytest --color=yes -s
setenv =
    ANSIBLE_DISPLAY_FAILED_STDERR=1
    ANSIBLE_VERBOSITY=1
    ANSIBLE_FORCE_COLOR={env:ANSIBLE_FORCE_COLOR:1}
    ANSIBLE_INVENTORY={toxinidir}/tests/hosts.ini
    ANSIBLE_CONFIG={toxinidir}/ansible.cfg
    ANSIBLE_NOCOWS=1
    ANSIBLE_RETRY_FILES_ENABLED=0
    ANSIBLE_GATHERING={env:ANSIBLE_GATHERING:explicit}
    ANSIBLE_VERBOSITY={env:ANSIBLE_VERBOSITY:0}
    PIP_DISABLE_PIP_VERSION_CHECK=1
    PY_COLORS={env:PY_COLORS:1}
    # pip: Avoid 2020-01-01 warnings: https://github.com/pypa/pip/issues/6207
    PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base_command
    PYTHONDONTWRITEBYTECODE=1
    # This should pass these args to molecule, no effect here as this is the default
    # but it validates that it accepts extra params.
    MOLECULE_OPTS=--destroy always
    MOLECULE_NO_LOG=false
    _EXTRAS=-l --html={envlogdir}/reports.html --self-contained-html
    PYTEST_ADDOPTS={env:_EXTRAS} {env:PYTEST_ADDOPTS:}
    TESTBOX={env:TESTBOX:testbox}
passenv =
    CI
    CURL_CA_BUNDLE
    DOCKER_*
    HOME
    PYTEST_*
    REQUESTS_CA_BUNDLE
    SSH_AUTH_SOCK
    SSL_CERT_FILE
    TOXENV
    TRAVIS
    TRAVIS_*
    TWINE_*
    VAGRANT_HOME
whitelist_externals =
    bash
    twine
    pytest
    pre-commit

[testenv:pkg]
description =
  Build package, verify metadata, install package and assert behavior when ansible is missing.
deps =
  build >= 0.7.0, < 0.8.0
  twine
skip_install = true
# Ref: https://twitter.com/di_codes/status/1044358639081975813
commands =
  # build wheel and sdist using PEP-517
  {envpython} -c 'import os.path, shutil, sys; \
  dist_dir = os.path.join("{toxinidir}", "dist"); \
  os.path.isdir(dist_dir) or sys.exit(0); \
  print("Removing \{!s\} contents...".format(dist_dir), file=sys.stderr); \
  shutil.rmtree(dist_dir)'
  {envpython} -m build \
    --outdir {toxinidir}/dist/ \
    {toxinidir}
  # Validate metadata using twine
  twine check --strict {toxinidir}/dist/*

[testenv:lint]
description = Performs linting, style checks
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run -a
